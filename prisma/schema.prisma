// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Member {
  quantaId          String       @id @db.VarChar(6)
  rollNo            String       @unique @db.Char(13)
  name              String       @db.VarChar(50)
  email             String       @unique
  phone             String       @db.Char(10)
  username          String       @unique @db.VarChar(50)
  gradYear          Int          @db.SmallInt
  quantaJoiningYear Int          @db.SmallInt
  socialLinks       SocialLink[]
  profilePic        String       @unique @db.VarChar(2083)
  PostHolder        PostHolder?
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
}

model PostHolder {
  quantaId  String   @id @db.VarChar(5)
  post      Post
  member    Member   @relation(fields: quantaId, references: quantaId)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Post {
  GENERAL_SECRETARY
  VICE_PRESIDENT
  CTC
  DESIGN_HEAD
  MANAGEMENT_HEAD
  TECHNICAL_HEAD
  FINANCE_HEAD
  WEB_HEAD
}

// store only the usernames (except in personalWebsite and blog). create the full links on the frontend.
model SocialLink {
  quantaId        String   @id @db.VarChar(5)
  linktree        String?  @db.VarChar(50)
  peerlist        String?  @db.VarChar(50)
  instagram       String?  @db.VarChar(50)
  twitter         String?  @db.VarChar(50)
  linkedin        String   @db.VarChar(50)
  github          String?  @db.VarChar(50)
  dribble         String?  @db.VarChar(50)
  behance         String?  @db.VarChar(50)
  personalWebsite String?  @db.VarChar(100)
  blog            String?  @db.VarChar(100)
  member          Member   @relation(fields: [quantaId], references: [quantaId])
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Admin {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Event {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(50)
  description String   @db.VarChar(500)
  date        DateTime
  link        String   @db.VarChar(300)
  posterPic   String   @db.VarChar(2083)
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
